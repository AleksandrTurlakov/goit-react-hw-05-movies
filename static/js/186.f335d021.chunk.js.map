{"version":3,"file":"static/js/186.f335d021.chunk.js","mappings":"mPAgDA,UA1CgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAa,GADf,mBAGgCE,EAAAA,EAAAA,IAAiBR,GAHjD,OAGUG,EAHV,OAIIC,EAAiBD,EAAcM,SAJnC,gDAMIC,EAAAA,GAAAA,MAAY,sIANhB,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAACX,IAEJY,QAAQC,IAAIV,IAGV,4BACGE,IAAa,SAAC,IAAD,KACd,wBAC4B,IAAzBF,EAAcW,QAAiBT,EAG9BF,EAAcY,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,oCAAYD,MACZ,uBAAIC,MAFGjB,EADO,KAFlB,wEAUJ,SAAC,KAAD,MAGL,C,mMC5CKkB,EAAQ,+BACRC,EAAG,mCACHC,EAAU,QAGHC,EAAS,mCAAG,6FACjBC,EADiB,UACAJ,EADA,qBACqBE,EADrB,YAFR,MAEQ,oBAC0DD,GAD1D,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMTC,EAAgB,mCAAG,WAAM1B,GAAN,gFACxBsB,EADwB,UACPJ,EADO,YACKE,EADL,YACmBpB,EADnB,oBACiCmB,EADjC,4BAEPI,EAAAA,EAAAA,IAAUD,GAFH,cAExBE,EAFwB,yBAGvBA,EAASC,MAHc,2CAAH,sDAMhBE,EAAa,mCAAG,WAAM3B,GAAN,gFACrBsB,EADqB,UACJJ,EADI,YACQE,EADR,YACsBpB,EADtB,4BAC4CmB,EAD5C,4BAGJI,EAAAA,EAAAA,IAAUD,GAHN,cAGrBE,EAHqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObjB,EAAgB,mCAAG,WAAMR,GAAN,gFACxBsB,EADwB,UACPJ,EADO,YACKE,EADL,YACmBpB,EADnB,4BACyCmB,EADzC,mCAGPI,EAAAA,EAAAA,IAAUD,GAHH,cAGxBE,EAHwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAe,mCAAG,WAAMC,GAAN,gFACvBP,EADuB,UACNJ,EADM,mBACaE,EADb,oBACmCD,EADnC,iCAC+DU,EAD/D,wCAGNN,EAAAA,EAAAA,IAAUD,GAHJ,cAGvBE,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","getApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from '../../getApi';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [moviesReviews, setMoviesReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      setIsLoading(true);\n      try {\n        const moviesReviews = await getMoviesReviews(id);\n        setMoviesReviews(moviesReviews.results);\n      } catch {\n        toast.error('Something went wrong, please try again! ü§∑‚Äç‚ôÇÔ∏èü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÇÔ∏è');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieReviews();\n  }, [id]);\n\n  console.log(moviesReviews);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <ul>\n        {moviesReviews.length === 0 && !isLoading ? (\n          <h2>We don't have any reviews for this movie</h2>\n        ) : (\n          moviesReviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n      <Toaster />\n    </main>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = `9305dc9ad534282c491ff880c3535cd7`;\nconst MEDIA_TYPE = `movie`;\nconst TIME_WINDOW = `day`;\n\nexport const getMovies = async () => {\n  const searchQuery = `${BASE_URL}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${KEY}`;\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesDetails = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesCast = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}/credits?api_key=${KEY}&language=en-US`;\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesReviews = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US&page=1\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesSearch = async moviesName => {\n  const searchQuery = `${BASE_URL}/search/${MEDIA_TYPE}?api_key=${KEY}&language=en-US&query=${moviesName}&page=1&include_adult=false`;\n  // https://api.themoviedb.org/3/search/movie?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US&query=batman&page=1&include_adult=false\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n"],"names":["id","useParams","useState","moviesReviews","setMoviesReviews","isLoading","setIsLoading","useEffect","getMoviesReviews","results","toast","getMovieReviews","console","log","length","map","author","content","BASE_URL","KEY","MEDIA_TYPE","getMovies","searchQuery","axios","response","data","getMoviesDetails","getMoviesCast","getMoviesSearch","moviesName"],"sourceRoot":""}