{"version":3,"file":"static/js/32.229a9b88.chunk.js","mappings":"kTAEMA,EAAQ,+BACRC,EAAG,mCACHC,EAAU,QAGHC,EAAS,mCAAG,6FACjBC,EADiB,UACAJ,EADA,qBACqBE,EADrB,YAFR,MAEQ,oBAC0DD,GAD1D,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMTC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBL,EADwB,UACPJ,EADO,YACKE,EADL,YACmBO,EADnB,oBACiCR,EADjC,4BAEPI,EAAAA,EAAAA,IAAUD,GAFH,cAExBE,EAFwB,yBAGvBA,EAASC,MAHc,2CAAH,sDAMhBG,EAAa,mCAAG,WAAMD,GAAN,gFACrBL,EADqB,UACJJ,EADI,YACQE,EADR,YACsBO,EADtB,4BAC4CR,EAD5C,4BAGJI,EAAAA,EAAAA,IAAUD,GAHN,cAGrBE,EAHqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAgB,mCAAG,WAAMF,GAAN,gFACxBL,EADwB,UACPJ,EADO,YACKE,EADL,YACmBO,EADnB,4BACyCR,EADzC,mCAGPI,EAAAA,EAAAA,IAAUD,GAHH,cAGxBE,EAHwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAe,mCAAG,WAAMC,GAAN,gFACvBT,EADuB,UACNJ,EADM,mBACaE,EADb,oBACmCD,EADnC,iCAC+DY,EAD/D,wCAGNR,EAAAA,EAAAA,IAAUD,GAHJ,cAGvBE,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,qD,gMC9BfO,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECqED,EAxEsB,WAAO,IAAD,IAClBV,GAAOY,EAAAA,EAAAA,MAAPZ,GAEFa,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,GAAoCC,EAAAA,EAAAA,UAAS,CAAC,GAA9C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAMAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAa,GADf,mBAG0BtB,EAAAA,EAAAA,IAAiBC,GAH3C,OAGUuB,EAHV,OAIIJ,EAAcI,GAJlB,gDAMIC,EAAAA,GAAAA,MAAY,sIANhB,yBAQIH,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdI,EACD,GAAE,CAACzB,IAEJ,IAAQ0B,EACNR,EADMQ,MAAOC,EACbT,EADaS,YAAaC,EAC1BV,EAD0BU,aAAcC,EACxCX,EADwCW,SAAUC,EAClDZ,EADkDY,OAAQC,EAC1Db,EAD0Da,aAI5D,GAFAC,QAAQC,IAAIf,GAEPQ,EAIL,OACE,4BACGN,IAAa,SAACc,EAAA,EAAD,KACd,SAAC1B,EAAD,CAAUC,GAAII,EAAd,sBACA,iCACE,gBACEsB,IAAKR,EAjCM,kCAiCqBA,EA/BtC,+DAgCMS,IAAKV,EACLW,QAAQ,UAEV,0BACGX,EADH,KACYE,EAAaU,MAAM,EAAG,GADlC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfT,GAA3B,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAIC,EAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAE3C,iCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMnC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,KACA,SAAC,EAAAoC,SAAD,CAAUC,UAAU,SAACZ,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C","sources":["getApi.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = `9305dc9ad534282c491ff880c3535cd7`;\nconst MEDIA_TYPE = `movie`;\nconst TIME_WINDOW = `day`;\n\nexport const getMovies = async () => {\n  const searchQuery = `${BASE_URL}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${KEY}`;\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesDetails = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesCast = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}/credits?api_key=${KEY}&language=en-US`;\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesReviews = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US&page=1\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesSearch = async moviesName => {\n  const searchQuery = `${BASE_URL}/search/${MEDIA_TYPE}?api_key=${KEY}&language=en-US&query=${moviesName}&page=1&include_adult=false`;\n  // https://api.themoviedb.org/3/search/movie?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US&query=batman&page=1&include_adult=false\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import toast, { Toaster } from 'react-hot-toast';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMoviesDetails } from '../../getApi';\nimport { Loader } from '../../components/Loader/Loader';\nimport { BackLink } from '../../components/BackLink/BackLink';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [moviesInfo, setMoviesInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const posterLink = 'https://image.tmdb.org/t/p/w300';\n  const noPoster =\n    'https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg';\n\n  useEffect(() => {\n    async function getMovie() {\n      setIsLoading(true);\n      try {\n        const details = await getMoviesDetails(id);\n        setMoviesInfo(details);\n      } catch {\n        toast.error('Something went wrong, please try again! ü§∑‚Äç‚ôÇÔ∏èü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÇÔ∏è');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [id]);\n\n  const { title, poster_path, release_date, overview, genres, vote_average } =\n    moviesInfo;\n  console.log(moviesInfo);\n\n  if (!title) {\n    return;\n  }\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <>\n        <img\n          src={poster_path ? posterLink + poster_path : noPoster}\n          alt={title}\n          loading=\"lazy\"\n        />\n        <h2>\n          {title} ({release_date.slice(0, 4)})\n        </h2>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(genre => genre.name).join(', ')}</p>\n      </>\n      <>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Toaster />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </>\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["BASE_URL","KEY","MEDIA_TYPE","getMovies","searchQuery","axios","response","data","getMoviesDetails","id","getMoviesCast","getMoviesReviews","getMoviesSearch","moviesName","StyledLink","styled","Link","BackLink","to","children","size","useParams","backLinkHref","useLocation","state","from","useState","moviesInfo","setMoviesInfo","isLoading","setIsLoading","useEffect","details","toast","getMovie","title","poster_path","release_date","overview","genres","vote_average","console","log","Loader","src","alt","loading","slice","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}