{"version":3,"file":"static/js/247.dca9e421.chunk.js","mappings":"oPAyDA,UAnDa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAuBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAa,GADf,mBAG+BE,EAAAA,EAAAA,IAAcR,GAH7C,OAGUS,EAHV,OAIIL,EAAcK,EAAaC,MAJ/B,gDAMIC,EAAAA,GAAAA,MAAY,sIANhB,yBAQIL,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,CAACZ,IAEJa,QAAQC,IAAIX,IAGV,4BACGE,IAAa,SAAC,IAAD,KACd,wBACyB,IAAtBF,EAAWY,QAAiBV,EAG3BF,EAAWa,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACb,2BACE,gBACEC,IAAKH,EA/BA,kCA+B4BA,EA7B7C,wEA8BYI,IAAKH,EACLI,QAAQ,UAEV,uBAAIJ,KACJ,uCAAeC,OAPRnB,EADI,KAFf,uEAeJ,SAAC,KAAD,MAGL,C,mMCrDKuB,EAAQ,+BACRC,EAAG,mCACHC,EAAU,QAGHC,EAAS,mCAAG,6FACjBC,EADiB,UACAJ,EADA,qBACqBE,EADrB,YAFR,MAEQ,oBAC0DD,GAD1D,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMTC,EAAgB,mCAAG,WAAM/B,GAAN,gFACxB2B,EADwB,UACPJ,EADO,YACKE,EADL,YACmBzB,EADnB,oBACiCwB,EADjC,4BAEPI,EAAAA,EAAAA,IAAUD,GAFH,cAExBE,EAFwB,yBAGvBA,EAASC,MAHc,2CAAH,sDAMhBtB,EAAa,mCAAG,WAAMR,GAAN,gFACrB2B,EADqB,UACJJ,EADI,YACQE,EADR,YACsBzB,EADtB,4BAC4CwB,EAD5C,4BAGJI,EAAAA,EAAAA,IAAUD,GAHN,cAGrBE,EAHqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObE,EAAgB,mCAAG,WAAMhC,GAAN,gFACxB2B,EADwB,UACPJ,EADO,YACKE,EADL,YACmBzB,EADnB,4BACyCwB,EADzC,mCAGPI,EAAAA,EAAAA,IAAUD,GAHH,cAGxBE,EAHwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAe,mCAAG,WAAMC,GAAN,gFACvBP,EADuB,UACNJ,EADM,mBACaE,EADb,oBACmCD,EADnC,iCAC+DU,EAD/D,wCAGNN,EAAAA,EAAAA,IAAUD,GAHJ,cAGvBE,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/Cast/Cast.jsx","getApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from '../../getApi';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [moviesCast, setMoviesCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const posterLink = 'https://image.tmdb.org/t/p/w300';\n  const noPoster =\n    'https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png';\n\n  useEffect(() => {\n    async function getMovieActors() {\n      setIsLoading(true);\n      try {\n        const moviesActors = await getMoviesCast(id);\n        setMoviesCast(moviesActors.cast);\n      } catch {\n        toast.error('Something went wrong, please try again! ü§∑‚Äç‚ôÇÔ∏èü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÇÔ∏è');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieActors();\n  }, [id]);\n\n  console.log(moviesCast);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <ul>\n        {moviesCast.length === 0 && !isLoading ? (\n          <h2>Sorry, there is no information here yet</h2>\n        ) : (\n          moviesCast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={profile_path ? posterLink + profile_path : noPoster}\n                alt={name}\n                loading=\"lazy\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))\n        )}\n      </ul>\n      <Toaster />\n    </main>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = `9305dc9ad534282c491ff880c3535cd7`;\nconst MEDIA_TYPE = `movie`;\nconst TIME_WINDOW = `day`;\n\nexport const getMovies = async () => {\n  const searchQuery = `${BASE_URL}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${KEY}`;\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesDetails = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesCast = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}/credits?api_key=${KEY}&language=en-US`;\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesReviews = async id => {\n  const searchQuery = `${BASE_URL}/${MEDIA_TYPE}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US&page=1\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n\nexport const getMoviesSearch = async moviesName => {\n  const searchQuery = `${BASE_URL}/search/${MEDIA_TYPE}?api_key=${KEY}&language=en-US&query=${moviesName}&page=1&include_adult=false`;\n  // https://api.themoviedb.org/3/search/movie?api_key=9305dc9ad534282c491ff880c3535cd7&language=en-US&query=batman&page=1&include_adult=false\n  const response = await axios.get(searchQuery);\n  return response.data;\n};\n"],"names":["id","useParams","useState","moviesCast","setMoviesCast","isLoading","setIsLoading","useEffect","getMoviesCast","moviesActors","cast","toast","getMovieActors","console","log","length","map","profile_path","name","character","src","alt","loading","BASE_URL","KEY","MEDIA_TYPE","getMovies","searchQuery","axios","response","data","getMoviesDetails","getMoviesReviews","getMoviesSearch","moviesName"],"sourceRoot":""}